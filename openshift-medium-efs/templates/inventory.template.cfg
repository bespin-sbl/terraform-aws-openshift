# OpenShift Inventory Template.
# Note that when the infrastructure is generated by Terraform, this file is
# expanded into './inventory.cfg', based on the rules in:
#
#   ./modules/openshift/08-inventory.tf

# Create an OSEv3 group that contains the masters and nodes groups
[OSEv3:children]
masters
etcd
nodes

# Set variables common for all OSEv3 hosts
[OSEv3:vars]
# SSH user, this user should allow ssh based auth without requiring a password
ansible_ssh_user=ec2-user

# If ansible_ssh_user is not root, ansible_become must be set to true
ansible_become=true

# Deploy OpenShift Origin 3.9.
openshift_deployment_type=origin
openshift_release=v3.9

# We need a wildcard DNS setup for our public access to services, fortunately
# we can use the superb xip.io to get one for free.
openshift_public_hostname=${public_hostname}
openshift_master_default_subdomain=${default_subdomain}

# Use an htpasswd file as the indentity provider.
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]

# Uncomment the line below to enable metrics for the cluster.
# openshift_hosted_metrics_deploy=true

# Use API keys rather than instance roles so that tenant containers don't get
# Openshift's EC2/EBS permissions
openshift_cloudprovider_kind=aws
openshift_cloudprovider_aws_access_key=${access_key}
openshift_cloudprovider_aws_secret_key=${secret_key}

# Set the cluster_id.
openshift_clusterid=${cluster_id}

# Enable ntp on masters to ensure proper failover
openshift_clock_enabled=true

# External provisioners ansible variables
openshift_provisioners_install_provisioners=true
openshift_provisioners_image_prefix=openshift3/
openshift_provisioners_image_version=v3.6

# An IAM user assigned with the AmazonElasticFileSystemReadOnlyAccess policy (or better).
# An EFS file system in your cluster’s region.
# Mount targets and security groups such that any node (in any zone in the cluster’s region) can mount the EFS file system by its File system DNS name.
openshift_provisioners_efs_fsid=
openshift_provisioners_efs_region=
openshift_provisioners_efs_aws_access_key_id=${access_key}
openshift_provisioners_efs_aws_secret_access_key=${secret_key}

openshift_provisioners_efs=true
openshift_provisioners_efs_path=/persistentvolumes
openshift_provisioners_efs_nodeselector="{'region': 'infra', 'zone': 'default'}"



# Create the masters host group. Note that due do:
#   https://github.com/dwmkerr/terraform-aws-openshift/issues/40
# We cannot use the internal DNS names (such as master.openshift.local) as there
# is a bug with the installer when using the AWS cloud provider.
[masters]
${master1_hostname}
${master2_hostname}
${master3_hostname}

# host group for etcd
[etcd]
${master1_hostname}
${master2_hostname}
${master3_hostname}

# host group for nodes, includes region info
[nodes]
${master1_hostname}
${master2_hostname}
${master3_hostname}
${node1_hostname} openshift_hostname=${node1_hostname} openshift_node_labels="{'region': 'primary', 'zone': 'east'}"
${node2_hostname} openshift_hostname=${node2_hostname} openshift_node_labels="{'region': 'primary', 'zone': 'west'}"
${infra1_hostname} openshift_hostname=${infra1_hostname} openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
${infra2_hostname} openshift_hostname=${infra2_hostname} openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
